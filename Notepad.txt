import os.path
from tkinter import *
from tkinter.messagebox import showinfo
from tkinter import colorchooser
from tkinter.filedialog import askopenfilename, asksaveasfilename

def newFile():
    global file
    root.title("Untitled-Notepad")
    file = None
    TextArea.delete(1.0, END)




def openfile():
    global file
    file=askopenfilename(defaultextension=".txt",filetypes=[("All Files","*.*"),("Text Documents","*.txt")])
    if file == "":
        file=None
    else:
        root.title(os.path.basename(file) + " -Notepad ")
        TextArea.delete(1.0,END)
        f= open(file,"r")
        TextArea.insert(1.0,f.read())
        f.close()


def saveFile():
    global file
    if file==None:
        file=asksaveasfilename(initialfile="unititled.txt",defaultextension=".txt",filetypes=[("All Files","*.*"), ("Text Documents","*.txt")])

        if file=="":
            file=None
        else:
            #save as a new file
            f = open(file,"w")
            f.write(TextArea.get(1.0,END))
            f.close()

            root.title(os.path.basename(file) + "-Notepad")
            print("File Save")
    else:#save the file
        f=open(file,"w")
        f.write(TextArea.get(1.0,END))
        f.close()









def quitApp():
    root.destroy()


def cut():
    TextArea.event_generate("<<Cut>>")

def copy():
    TextArea.event_generate("<<copy>>")

def paste():
    TextArea.event_generate("<<Paste>>")

def about():
    showinfo("Notepad", "Notepad created by Rohit")

def change_back_color(self):
    c=colorchooser.askcolor()
   # self.txt_area.configure(background=c[1])


def change_text_color(self):
    c = colorchooser.askcolor()
    self.txt_area.configure(textground=c[1])








if __name__== '__main__':
    #Basic tkinter setup
    root=Tk()
    root.title("Untitled-Notepad")
    root.wm_iconbitmap("tb.png")
    root.geometry("544x588")

    #Add TextArea
    TextArea=Text(root,font="lucica 14",bg="red",fg="yellow")
    file=None
    TextArea.pack(expand=True,fill=BOTH)

    #Lets create a menubar
    MenuBar = Menu(root)

    #File menu starts
    Filemenu= Menu(MenuBar,tearoff=0)

    #To open new file
    Filemenu.add_command(label="New", command=newFile)

    #To open already existing file
    Filemenu.add_command(label="open",command=openfile)

    #To save the current file
    Filemenu.add_command(label="save",command=saveFile)
    Filemenu.add_separator()
    Filemenu.add_command(label="Exit",command="quitApp")
    MenuBar.add_cascade(label="File",menu=Filemenu)
    #File menu Ends

    #Edit menu stars
    EditMenu=Menu(MenuBar,tearoff=0)

    #To  give a feature of cut, copy and pasts
    EditMenu.add_command(label="cut",command=cut)
    EditMenu.add_command(label="Copy", command=copy)
    EditMenu.add_command(label="Paste", command=paste)

    MenuBar.add_cascade(label="Edit",menu=EditMenu)



    #Edit menu End

    #color menu start
    ColorMenu = Menu(MenuBar, tearoff=0)

    # To  give a feature of cut, copy and pasts
    ColorMenu.add_command(label="Background color", command= change_back_color)
    ColorMenu.add_command(label="Text color", command=change_text_color)

    MenuBar.add_cascade(label="Color", menu=ColorMenu)

    # Help menu start
    HelpMenu=Menu(MenuBar,tearoff=0)
    HelpMenu.add_command(label="About Notepad",command=about)

    MenuBar.add_cascade(label="Help",menu=HelpMenu)

      # Help menu End
    root.config(menu=MenuBar)

    #Adding scrollbar
    Scroll = Scrollbar(TextArea)
    Scroll.pack(side=RIGHT,fill=Y)
    Scroll.config(command=TextArea.yview)
    TextArea.config(yscrollcommand=Scroll.set)

    root.mainloop()
